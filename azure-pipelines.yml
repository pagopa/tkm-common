# Maven

# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master
pr: none

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: POM
  displayName: POM
  jobs:
    - job: POM
      displayName: POM
      pool:
        vmImage: $(vmImageName)
      steps:
        - task: DownloadSecureFile@1
          displayName: 'download settings.xml for Maven'
          name: settingsxml
          inputs:
            secureFile: 'settings.xml'
            retryCount: '2'
        - task: Bash@3
          displayName: Get POM version
          name: getpomversion
          inputs:
            targetType: 'inline'
            script: |
              version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout -s $(settingsxml.secureFilePath))
              echo "##vso[task.setvariable variable=outputpomversion;isOutput=true]$version"
              echo "Current Project Version ${version}"
            failOnStderr: true
- stage: Build
  displayName: Build stage
  variables:
    pomversion: $[ stageDependencies.POM.POM.outputs['getpomversion.outputpomversion'] ]
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DownloadSecureFile@1
      displayName: 'download settings.xml for Maven'
      name: settingsxml
      inputs:
        secureFile: 'settings.xml'
        retryCount: '2'
    - task: Maven@3
      displayName: Build and Deploy Artifacts
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'deploy'
        options: '-s $(settingsxml.secureFilePath)'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: true
        sonarQubeRunAnalysis: false
    - task: GitHubRelease@1
      inputs:
        gitHubConnection: 'githubTag'
        repositoryName: '$(Build.Repository.Name)'
        action: 'create'
        tagSource: 'userSpecifiedTag'
        tag: $(pomversion)